name: CI
on:
  workflow_dispatch:
  push:
  
jobs:
  generate-jobs:
    name: Generate Jobs
    runs-on: ubuntu-20.04
    outputs:
      strategy: ${{ steps.generate-jobs.outputs.strategy }}
    steps:
    - uses: actions/checkout@v2

    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x

    - id: generate-jobs
      name: Generate Jobs
      run: |
        deno run --allow-net build.ts
        strategy="$(deno run --allow-net build.ts)"
        echo $strategy
        echo "::set-output name=strategy::$strategy"

  build-amd64:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy).amd64 }}
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Login into Docker Registery
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "shyim" --password-stdin

      - name: Login into Github Docker Registery
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u shyim --password-stdin

      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}

      - name: Push ${{ matrix.name }}
        run: ${{ matrix.runs.push }}

  build-arm64:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy).arm64 }}
    name: ${{ matrix.name }}
    runs-on: ARM64
    steps:
      - uses: actions/checkout@v2

      - name: Login into Docker Registery
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "shyim" --password-stdin

      - name: Login into Github Docker Registery
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u shyim --password-stdin

      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}

      - name: Push ${{ matrix.name }}
        run: ${{ matrix.runs.push }}

  build-manifest:
    name: Generate Manifest file
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy).merge }}
    needs:
      - generate-jobs
      - build-amd64
      - build-arm64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Login into Docker Registery
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "shyim" --password-stdin

      - name: Login into Github Docker Registery
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u shyim --password-stdin

      - name: Merge
        run: ${{ matrix.runs.merge }}


